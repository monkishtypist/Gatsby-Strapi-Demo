{"version":3,"sources":["webpack:///./src/templates/author.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["UserTemplate","data","strapiUser","username","posts","map","post","key","id","to","Title","Content","query","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","color","textDecoration","defaultProps","Layout","children","site","siteMetadata","title","paddingTop","Date","getFullYear","href"],"mappings":"6FAAA,8FAoBeA,UAhBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACjB,kBAAC,IAAD,KACE,4BAAKA,EAAKC,WAAWC,UACrB,4BACGF,EAAKC,WAAWE,MAAMC,KAAI,SAAAC,GAAI,OAC7B,wBAAIC,IAAKD,EAAKE,IACZ,4BACE,kBAAC,OAAD,CAAMC,GAAE,SAAWH,EAAKE,IAAOF,EAAKI,QAEtC,2BAAIJ,EAAKK,gBASd,IAAMC,EAAK,a,mFClBZC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACEC,MAAO,CACLC,WAAW,gBACXC,aAAa,YAGf,yBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,wBAAIL,MAAO,CAAEG,OAAQ,IACnB,kBAAC,OAAD,CACET,GAAG,IACHM,MAAO,CACLM,MAAM,QACNC,eAAe,SAGhBR,OAWXD,EAAOU,aAAe,CACpBT,UAAU,IAGGD,Q,UCYAW,IAvCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVxB,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQa,UAAWb,EAAKyB,KAAKC,aAAaC,QAC1C,yBACEb,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBACRS,WAAY,IAGd,8BAAOJ,GACP,sCACK,IAAIK,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,UAHF,QAKE,uBAAGA,KAAK,yBAAR,e","file":"component---src-templates-author-js-fc3e152cbf8ad8a6bcac.js","sourcesContent":["import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\nimport Layout from '../components/layout'\r\n\r\nconst UserTemplate = ({ data }) => (\r\n    <Layout>\r\n      <h1>{data.strapiUser.username}</h1>\r\n      <ul>\r\n        {data.strapiUser.posts.map(post => (\r\n          <li key={post.id}>\r\n            <h2>\r\n              <Link to={`/Post_${post.id}`}>{post.Title}</Link>\r\n            </h2>\r\n            <p>{post.Content}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Layout>\r\n  )\r\n\r\nexport default UserTemplate\r\n\r\nexport const query = graphql`\r\n  query UserTemplate($id: String!) {\r\n    strapiUser(id: { eq: $id }) {\r\n      id\r\n      username\r\n      posts {\r\n        id\r\n        Title\r\n        Content\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          {` and `}\n          <a href=\"https://www.strapi.io\">Strapi</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}